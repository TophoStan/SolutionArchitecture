// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagement.Infrastructure;

#nullable disable

namespace UserManagement.Infrastructure.Migrations
{
    [DbContext(typeof(UserMySQLContext))]
    [Migration("20240625084157_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("UserManagement.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Logitech address",
                            Email = "Logitech@mail.com",
                            FirstName = "John Doe",
                            LastName = "123456789",
                            PhoneNumber = "Logitech BV."
                        },
                        new
                        {
                            UserId = 2,
                            Address = "Pokemon address",
                            Email = "Pokemon@mail.com",
                            FirstName = "Ash Ketchum",
                            LastName = "987654321",
                            PhoneNumber = "Pokemon Inc."
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Red Bull Racing address",
                            Email = "Redbull@mail.com",
                            FirstName = "Max Verstappen",
                            LastName = "123456789",
                            PhoneNumber = "Red Bull Racing"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

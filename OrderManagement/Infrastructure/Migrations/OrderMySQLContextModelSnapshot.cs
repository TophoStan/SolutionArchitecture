// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManagement.Infrastructure.Order;

#nullable disable

namespace OrderManagement.Infrastructure.Migrations
{
    [DbContext(typeof(OrderMySQLContext))]
    partial class OrderMySQLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("OrderManagement.Domain.Events.OrderEvent", b =>
                {
                    b.Property<long>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("EventId"));

                    b.Property<string>("AggregateId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EventId");

                    b.HasIndex("AggregateId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = -1L,
                            AggregateId = "1234",
                            EventData = "{\"OrderNumber\":\"1234\",\"UserEmail\":\"stijn@mail.com\",\"OrderDate\":\"2024-06-21T12:41:06.7514476+02:00\",\"Status\":\"Processing\"}",
                            EventTime = new DateTime(2024, 6, 21, 12, 41, 6, 751, DateTimeKind.Local).AddTicks(5702),
                            EventType = "OrderCreated"
                        },
                        new
                        {
                            EventId = -2L,
                            AggregateId = "4321",
                            EventData = "{\"OrderNumber\":\"4321\",\"UserEmail\":\"thomas@mail.com\",\"OrderDate\":\"2024-06-21T12:41:06.7514524+02:00\",\"Status\":\"Done\"}",
                            EventTime = new DateTime(2024, 6, 21, 12, 41, 6, 751, DateTimeKind.Local).AddTicks(5720),
                            EventType = "OrderCreated"
                        });
                });

            modelBuilder.Entity("OrderManagement.Domain.Order", b =>
                {
                    b.Property<string>("OrderNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("OrderNumber");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderNumber = "1234",
                            OrderDate = new DateTime(2024, 6, 21, 12, 41, 6, 751, DateTimeKind.Local).AddTicks(4476),
                            Status = "Processing",
                            UserEmail = "stijn@mail.com"
                        },
                        new
                        {
                            OrderNumber = "4321",
                            OrderDate = new DateTime(2024, 6, 21, 12, 41, 6, 751, DateTimeKind.Local).AddTicks(4524),
                            Status = "Done",
                            UserEmail = "thomas@mail.com"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
